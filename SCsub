#!/usr/bin/env python

Import("env")

# give parent environment access to godot-cpp bindings for types
env.Append(CPPPATH=[env.Dir("src/")])

env_manifold = env.Clone()

env_manifold.Append(CPPPATH=["manifold/include/", "clipper2/CPP/Clipper2Lib/include/", "polypartition/src/"])

# tell manifold we want to run operations in series
env_manifold.Append(CPPDEFINES=[("MANIFOLD_PAR", "-1")])

sources = [
	"manifold/src/boolean3.cpp",
	"manifold/src/boolean_result.cpp",
	"manifold/src/constructors.cpp",
	"manifold/src/csg_tree.cpp",
	"manifold/src/edge_op.cpp",
	"manifold/src/face_op.cpp",
	"manifold/src/impl.cpp",
	"manifold/src/manifold.cpp",
	"manifold/src/polygon.cpp",
	"manifold/src/properties.cpp",
	"manifold/src/quickhull.cpp",
	"manifold/src/sdf.cpp",
	"manifold/src/smoothing.cpp",
	"manifold/src/sort.cpp",
	"manifold/src/subdivision.cpp",
	"manifold/src/tree2d.cpp",
	"manifold/src/cross_section/cross_section.cpp",

	"clipper2/CPP/Clipper2Lib/src/clipper.engine.cpp",
	"clipper2/CPP/Clipper2Lib/src/clipper.offset.cpp",
	"clipper2/CPP/Clipper2Lib/src/clipper.rectclip.cpp",

	"polypartition/src/polypartition.cpp",

	"src/godot_manifold_register_types.cpp",
	"src/godot_manifold_cross_section.cpp",
	"src/godot_manifold_mesh.cpp",
]

manifold_objects = [env_manifold.SharedObject(file) for file in sources]

Return("manifold_objects")
